name: araxia-docker-test
# on:
#   push:
#     branches:
#       - 'araxia-main'
on:
  release:
    types: [published]

concurrency:
  group: ${{ github.head_ref }} || concat(${{ github.ref }}, ${{ github.workflow }})
  cancel-in-progress: true

jobs:
  build-skeleton:
    runs-on: "ubuntu-latest"
    # runs-on: self-hosted
    steps:

      - name: Set up Docker image tag
        id: docker_tag
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            echo "::set-output name=tag::${{ github.event.release.tag_name }}"
          else
            echo "::set-output name=tag::${{ github.sha }}"
          fi

      - uses: actions/checkout@v4
      - name: Free up disk space
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Login to GitHub Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Skeleton Container
        run: docker buildx build --push -t ghcr.io/araxiaonline/acore-skeleton:${{ steps.docker_tag.outputs.tag }} --target skeleton --file ./apps/docker/Dockerfile .

      - name: Build Worldserver Container
        run: docker buildx build --push -t ghcr.io/araxiaonline/araxia-worldserver:${{ steps.docker_tag.outputs.tag }} --target worldserver --file ./apps/docker/Dockerfile .

      - name: Build Authserver Container
        run: docker buildx build --push -t ghcr.io/araxiaonline/araxia-authserver:${{ steps.docker_tag.outputs.tag }} --target authserver --file ./apps/docker/Dockerfile .

      - name: Build db-import Container
        run: docker buildx build --push -t ghcr.io/araxiaonline/araxia-db-import:${{ steps.docker_tag.outputs.tag }} --target db-import --file ./apps/docker/Dockerfile .

      - name: Build client-data Container
        run: docker buildx build --push -t ghcr.io/araxiaonline/araxia-client-data:${{ steps.docker_tag.outputs.tag }} --target client-data --file ./apps/docker/Dockerfile .


      # - name: Push skeleton image
      #   run: docker push ghcr.io/araxiaonline/acore-skeleton:${{ steps.docker_tag.outputs.tag }}

      # - name: Push Worldserver image
      #   run: docker push ghcr.io/araxiaonline/araxia-worldserver:${{ steps.docker_tag.outputs.tag }}

      # - name: Push Authserver image
      #   run: docker push ghcr.io/araxiaonline/araxia-authserver:${{ steps.docker_tag.outputs.tag }}

      # - name: Push db-import image
      #   run: docker push ghcr.io/araxiaonline/araxia-authserver:${{ steps.docker_tag.outputs.tag }}

      # - name: Push client-data image
      #   run: docker push ghcr.io/araxiaonline/araxia-authserver:${{ steps.docker_tag.outputs.tag }}

      # - name: build worldserver
      #   uses: ./.github/actions/docker-tag-and-build
      #   with:
      #     component-name: worldserver
      #     tags: ghcr.io/araxiaonline/azerothcore-worldserver:${{ steps.docker_tag.outputs.tag }}
      #     push: true

